{"ast":null,"code":"var _jsxFileName = \"/app/src/UploadPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadPage() {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const [result, setResult] = useState(null);\n  const [isOverlayOpen, setIsOverlayOpen] = useState(false);\n  const [error, setError] = useState(null);\n  const [statusMessage, setStatusMessage] = useState('');\n  const handleInputChange = event => {\n    setInputText(event.target.value);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setStatusMessage('Input received! Processing...');\n    setError(null);\n    setResult(null);\n    try {\n      const response = await fetch('http://localhost:5001/api/process-text', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          inputText\n        })\n      });\n      console.log(\"INFO: Response status:\", response.status);\n      if (response.ok) {\n        const result = await response.json();\n        console.log(\"INFO: Response from backend:\", result);\n        if (result.generatedCode) {\n          setResult(result.generatedCode);\n          setStatusMessage('Code generated successfully!');\n        } else {\n          setStatusMessage('Received but no code generated.');\n        }\n        setIsOverlayOpen(true);\n      } else if (response.status === 400) {\n        setError('No input text provided.');\n        setStatusMessage('Please enter a valid prompt.');\n      } else {\n        const errorMessage = `Error generating code: ${response.status} ${response.statusText}`;\n        console.error(errorMessage);\n        setError(errorMessage);\n        setStatusMessage('Error processing the request.');\n      }\n    } catch (error) {\n      console.error(\"Error processing request:\", error);\n      setError('Error processing request');\n      setStatusMessage('Error sending the request.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/logo-no-background.png\",\n        alt: \"Beerings Logo\",\n        className: \"logo-top-left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: inputText,\n            onChange: handleInputChange,\n            placeholder: \"Enter your prompt or text for the model\",\n            className: \"text-input\",\n            rows: \"5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submit-button\",\n            children: \"Generate Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), statusMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-message\",\n        children: statusMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 27\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }, this), isOverlayOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Generated Code:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"generated-code\",\n            children: result\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-button\",\n            onClick: () => setIsOverlayOpen(false),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadPage, \"fJ/LPqsTXKOLuLmRfADXEf/bSks=\");\n_c = UploadPage;\nexport default UploadPage;\nvar _c;\n$RefreshReg$(_c, \"UploadPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadPage","_s","inputText","setInputText","result","setResult","isOverlayOpen","setIsOverlayOpen","error","setError","statusMessage","setStatusMessage","handleInputChange","event","target","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","console","log","status","ok","json","generatedCode","errorMessage","statusText","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","placeholder","rows","type","onClick","_c","$RefreshReg$"],"sources":["/app/src/UploadPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction UploadPage() {\n  const [inputText, setInputText] = useState('');\n  const [result, setResult] = useState(null);\n  const [isOverlayOpen, setIsOverlayOpen] = useState(false);\n  const [error, setError] = useState(null);\n  const [statusMessage, setStatusMessage] = useState('');\n\n  const handleInputChange = (event) => {\n    setInputText(event.target.value);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setStatusMessage('Input received! Processing...');\n    setError(null);\n    setResult(null);\n\n    try {\n      const response = await fetch('http://localhost:5001/api/process-text', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ inputText }),\n      });\n\n      console.log(\"INFO: Response status:\", response.status);\n\n      if (response.ok) {\n        const result = await response.json();\n        console.log(\"INFO: Response from backend:\", result);\n        if (result.generatedCode) {\n          setResult(result.generatedCode);\n          setStatusMessage('Code generated successfully!');\n        } else {\n          setStatusMessage('Received but no code generated.');\n        }\n        setIsOverlayOpen(true);\n      } else if (response.status === 400) {\n        setError('No input text provided.');\n        setStatusMessage('Please enter a valid prompt.');\n      } else {\n        const errorMessage = `Error generating code: ${response.status} ${response.statusText}`;\n        console.error(errorMessage);\n        setError(errorMessage);\n        setStatusMessage('Error processing the request.');\n      }\n    } catch (error) {\n      console.error(\"Error processing request:\", error);\n      setError('Error processing request');\n      setStatusMessage('Error sending the request.');\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <header>\n        <img src=\"/logo-no-background.png\" alt=\"Beerings Logo\" className=\"logo-top-left\" />\n      </header>\n\n      <main>\n        <form onSubmit={handleSubmit}>\n          <div className=\"input-area\">\n            <textarea\n              value={inputText}\n              onChange={handleInputChange}\n              placeholder=\"Enter your prompt or text for the model\"\n              className=\"text-input\"\n              rows=\"5\"\n            />\n            <button type=\"submit\" className=\"submit-button\">Generate Code</button>\n          </div>\n        </form>\n\n        {statusMessage && <div className=\"status-message\">{statusMessage}</div>}\n\n        {error && <div className=\"error-message\">{error}</div>}\n\n        {isOverlayOpen && (\n          <div className=\"overlay\">\n            <div className=\"overlay-content\">\n              <h3>Generated Code:</h3>\n              <pre className=\"generated-code\">{result}</pre>\n              <button className=\"close-button\" onClick={() => setIsOverlayOpen(false)}>\n                Close\n              </button>\n            </div>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default UploadPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}