{"ast":null,"code":"var _jsxFileName = \"/app/src/ResultsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResultsPage() {\n  _s();\n  const {\n    state\n  } = useLocation(); // Access the passed generatedData from the previous page\n  const [selectedCodeType, setSelectedCodeType] = useState('html'); // Default view: HTML\n  const {\n    generatedData\n  } = state;\n  const handleToggle = codeType => {\n    setSelectedCodeType(codeType);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/logo-no-background.png\",\n        alt: \"Logo\",\n        className: \"logo-top-left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `toggle-button ${selectedCodeType === 'html' ? 'active' : ''}`,\n          onClick: () => handleToggle('html'),\n          children: \"HTML\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `toggle-button ${selectedCodeType === 'css' ? 'active' : ''}`,\n          onClick: () => handleToggle('css'),\n          children: \"CSS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `toggle-button ${selectedCodeType === 'js' ? 'active' : ''}`,\n          onClick: () => handleToggle('js'),\n          children: \"JS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code-display\",\n        children: [selectedCodeType === 'html' && /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: generatedData.html\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 43\n        }, this), selectedCodeType === 'css' && /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: generatedData.css\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 42\n        }, this), selectedCodeType === 'js' && /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: generatedData.js\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(ResultsPage, \"RSSmdCjQBK6H9ebD/SikNmshMhQ=\", false, function () {\n  return [useLocation];\n});\n_c = ResultsPage;\nexport default ResultsPage;\nvar _c;\n$RefreshReg$(_c, \"ResultsPage\");","map":{"version":3,"names":["React","useState","useLocation","jsxDEV","_jsxDEV","ResultsPage","_s","state","selectedCodeType","setSelectedCodeType","generatedData","handleToggle","codeType","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","html","css","js","_c","$RefreshReg$"],"sources":["/app/src/ResultsPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './App.css';\n\nfunction ResultsPage() {\n  const { state } = useLocation(); // Access the passed generatedData from the previous page\n  const [selectedCodeType, setSelectedCodeType] = useState('html'); // Default view: HTML\n  const { generatedData } = state;\n\n  const handleToggle = (codeType) => {\n    setSelectedCodeType(codeType);\n  };\n\n  return (\n    <div className=\"container\">\n      <header>\n        <img src=\"/logo-no-background.png\" alt=\"Logo\" className=\"logo-top-left\" />\n      </header>\n\n      <main>\n        <div className=\"toggle-buttons\">\n          <button\n            className={`toggle-button ${selectedCodeType === 'html' ? 'active' : ''}`}\n            onClick={() => handleToggle('html')}\n          >\n            HTML\n          </button>\n          <button\n            className={`toggle-button ${selectedCodeType === 'css' ? 'active' : ''}`}\n            onClick={() => handleToggle('css')}\n          >\n            CSS\n          </button>\n          <button\n            className={`toggle-button ${selectedCodeType === 'js' ? 'active' : ''}`}\n            onClick={() => handleToggle('js')}\n          >\n            JS\n          </button>\n        </div>\n\n        <div className=\"code-display\">\n          {selectedCodeType === 'html' && <pre>{generatedData.html}</pre>}\n          {selectedCodeType === 'css' && <pre>{generatedData.css}</pre>}\n          {selectedCodeType === 'js' && <pre>{generatedData.js}</pre>}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default ResultsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}